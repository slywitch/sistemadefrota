/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Compras.java
 *
 * Created on 03/12/2009, 10:25:14
 */

package controle;

import java.awt.Dimension;
import javax.swing.JDesktopPane;

/**
 *
 * @author Jeferson
 */
public class Compras extends javax.swing.JInternalFrame {

    /** Creates new form Compras */
    public Compras() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jmbBarra = new javax.swing.JMenuBar();
        jmnArquivo = new javax.swing.JMenu();
        jmiNovo = new javax.swing.JMenuItem();
        jmiSalvar = new javax.swing.JMenuItem();
        jmiExcluir = new javax.swing.JMenuItem();
        jmnPesquisa = new javax.swing.JMenu();
        jmiPesquisa = new javax.swing.JMenuItem();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setTitle("Compras");

        jmnArquivo.setText("Arquivo");

        jmiNovo.setText("Novo");
        jmiNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNovoActionPerformed(evt);
            }
        });
        jmnArquivo.add(jmiNovo);

        jmiSalvar.setText("Salvar");
        jmiSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSalvarActionPerformed(evt);
            }
        });
        jmnArquivo.add(jmiSalvar);

        jmiExcluir.setText("Excluir");
        jmiExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExcluirActionPerformed(evt);
            }
        });
        jmnArquivo.add(jmiExcluir);

        jmbBarra.add(jmnArquivo);

        jmnPesquisa.setText("Pesquisar");

        jmiPesquisa.setText("Pesquisa");
        jmnPesquisa.add(jmiPesquisa);

        jmbBarra.add(jmnPesquisa);

        setJMenuBar(jmbBarra);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 714, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 437, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNovoActionPerformed
/*
        Limpar();

        jtfData.requestFocus();
 */
    }//GEN-LAST:event_jmiNovoActionPerformed

    private void jmiSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSalvarActionPerformed
/*
        String Veiculo = ((Combo)cboVeiculo.getSelectedItem()).getKey();
        String Motorista = ((Combo)cboMotorista.getSelectedItem()).getKey();

        Conexao = new ConexaoAccess();
        Conexao.Conectar();

        if (jtfCodigo.getText().equals("")){
            jtfCodigo.setText("0");
        }

        String sSQL = "select * from t_movimentacao where codigo = " + jtfCodigo.getText() + "";
        System.out.println(sSQL);
        Conexao.setSQL(sSQL);
        ResultSet RS = Conexao.Consultar();

        try {

            boolean existe = false;

            if(RS.next()){
                existe = true;
            }

            int linha_total = jTable1.getRowCount();
            System.out.println(linha_total);

            int contador = 1;

            while(contador <= linha_total){
                int linha = contador - 1;

                String coluna0 = jTable1.getValueAt(linha, 0).toString();
                String coluna1 = jTable1.getValueAt(linha, 1).toString();
                String coluna2 = jTable1.getValueAt(linha, 2).toString();
                String coluna4 = jTable1.getValueAt(linha, 4).toString();
                String coluna6 = jTable1.getValueAt(linha, 6).toString();
                String coluna7 = jTable1.getValueAt(linha, 7).toString();
                String coluna8 = jTable1.getValueAt(linha, 8).toString();

                if(existe){
                    String SQL;

                    SQL = "update t_movimentacao set chassis_cod = '" + Veiculo + "', cpf_cod = '" + Motorista + "', data = '";
                    SQL = SQL + jtfData.getText() + "' where codigo = " + jtfCodigo.getText() + "";

                    System.out.println(SQL);
                    Conexao.setSQL(SQL);
                    Conexao.Executar();

                    System.out.println(coluna0);

                    if (coluna0.equals("UPD")){
                        SQL = "update t_movimentacao_item set fornecedor_cod = '" + coluna2 + "', evento_item_cod = " + coluna4 + ", ";
                        SQL = SQL + "descricao = '" + coluna6 + "', qtde = " + coluna7 + ", un_medida = " + coluna8 + " ";
                        SQL = SQL + "where codigo = " + jtfCodigo.getText() + " and movimentacao_cod = " + coluna1 + "";

                        System.out.println(SQL);
                        Conexao.setSQL(SQL);
                        Conexao.Executar();
                    } else if (coluna0.equals("EXC")){
                        SQL = "delete from t_movimentacao_item where movimentacao_cod = " + jtfCodigo.getText() + " ";
                        SQL = SQL + "and codigo = " + coluna1 + "";

                        System.out.println(SQL);
                        Conexao.setSQL(SQL);
                        Conexao.Executar();
                    } else if(coluna0.equals("INC")){
                        String Prox_Item;

                        Prox_Item = Fun.Proximo("t_movimentacao_item");

                        SQL = "insert into t_movimentacao_item (codigo, movimentacao_cod, fornecedor_cod, evento_item_cod, descricao, ";
                        SQL = SQL + "qtde, un_medida) values (" + Prox_Item + ", " + jtfCodigo.getText() + ", " + coluna2 + ", ";
                        SQL = SQL + coluna4 + ", '" + coluna6 + "', " + coluna7 + ", " + coluna8 + ")";

                        System.out.println(SQL);
                        Conexao.setSQL(SQL);
                        Conexao.Executar();
                    }
                } else {
                    String SQL;
                    String Prox;

                    Funcoes Fun = new Funcoes();
                    Prox = Fun.Proximo("t_movimentacao");

                    SQL = "insert into t_movimentacao (codigo, chassis_cod, cpf_cod, data) values (";
                    SQL = SQL + Prox + ", '" + Veiculo + "', '" + Motorista + "', '" + jtfData.getText() + "')";

                    System.out.println(SQL);
                    Conexao.setSQL(SQL);
                    Conexao.Executar();

                    String Prox_Item;

                    Prox_Item = Fun.Proximo("t_movimentacao_item");

                    SQL = "insert into t_movimentacao_item (codigo, movimentacao_cod, fornecedor_cod, evento_item_cod, descricao, ";
                    SQL = SQL + "qtde, un_medida) values (" + Prox_Item + ", " + Prox + ", " + coluna2 + ", ";
                    SQL = SQL + coluna4 + ", '" + coluna6 + "', " + coluna7 + ", " + coluna8 + ")";

                    System.out.println(SQL);
                    Conexao.setSQL(SQL);
                    Conexao.Executar();
                }

                contador++;

            }

        } catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "(Erro na validação): " + Erro);
        }

        Conexao.Desconectar();

        Limpar();

        jtfData.requestFocus();*/
    }//GEN-LAST:event_jmiSalvarActionPerformed

    private void jmiExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExcluirActionPerformed
/*
        String SQL;

        Conexao = new ConexaoAccess();
        Conexao.Conectar();

        SQL = "delete from t_movimentacao_item where movimentacao_cod = " + jtfCodigo.getText() + "";
        Conexao.setSQL(SQL);
        Conexao.Executar();

        SQL = "delete from t_movimentacao where codigo = " + jtfCodigo.getText() + "";
        Conexao.setSQL(SQL);
        Conexao.Executar();

        Conexao.Desconectar();

        Limpar();

        jtfData.requestFocus();*/
    }//GEN-LAST:event_jmiExcluirActionPerformed

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pesquisa().setVisible(true);
            }
        });
    }

    public void centralizar(JDesktopPane dp) {
        Dimension ds = dp.getSize();
        Dimension dw = this.getSize();
        this.setLocation((ds.width - dw.width) / 2, (ds.height - dw.height) / 2);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jmbBarra;
    private javax.swing.JMenuItem jmiExcluir;
    private javax.swing.JMenuItem jmiNovo;
    private javax.swing.JMenuItem jmiPesquisa;
    private javax.swing.JMenuItem jmiSalvar;
    private javax.swing.JMenu jmnArquivo;
    private javax.swing.JMenu jmnPesquisa;
    // End of variables declaration//GEN-END:variables

}
