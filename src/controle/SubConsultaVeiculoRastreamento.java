/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SubConsultaVeiculoRastreamento.java
 *
 * Created on 07/01/2010, 16:33:42
 */

package controle;

import classes.ConexaoAccess;
import java.awt.Dimension;
import java.sql.ResultSet;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.InputStream;
import java.util.HashMap;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Jeferson
 */
public class SubConsultaVeiculoRastreamento extends javax.swing.JInternalFrame {

    private ConexaoAccess Conexao;
    String CodigoImpressao;

    /** Creates new form SubConsultaVeiculoRastreamento */
    public SubConsultaVeiculoRastreamento() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setClosable(true);
        setTitle("Detalhes do Rastreamento");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hora Saída", "Km Saída", "Hora Chegada", "Km Chegada"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        Impressao(CodigoImpressao);
    }//GEN-LAST:event_jTable1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SubConsultaVeiculoRastreamento().setVisible(true);
            }
        });
    }

    public void centralizar(JDesktopPane dp) {
        Dimension ds = dp.getSize();
        Dimension dw = this.getSize();
        this.setLocation((ds.width - dw.width) / 2, (ds.height - dw.height) / 2);
    }

    public void CarregarDados(String Codigo){

        String SQL;

        SQL = "select (tch.hora) as hora_saida, (tch.km) as km_saida, (tcd.hora) as hora_chegada, ";
        SQL = SQL + "(tcd.km) as km_chegada, tch.destino ";
        SQL = SQL + "from t_chaves tch ";
        SQL = SQL + "inner join t_chaves_devolucao tcd on tcd.codigo = tch.codigo ";
        //SQL = SQL + "inner join t_veiculo tve on tve.chassis = tch.chassis_cod ";
        SQL = SQL + "where tch.codigo = " + Codigo + " ";
        SQL = SQL + "and tch.exclusao = 0 ";

        CodigoImpressao = Codigo;

        try{

            Conexao = new ConexaoAccess();
            Conexao.Conectar();
            Conexao.setSQL(SQL);

            DefaultTableModel modelo2;
            modelo2 = (DefaultTableModel)jTable1.getModel();
            modelo2.setRowCount(0);

            ResultSet RS = Conexao.Consultar();

            while(RS.next()){
                DefaultTableModel Tabela = (DefaultTableModel) jTable1.getModel();
                Object[] Linha = {RS.getString("hora_saida"), RS.getString("km_saida"), RS.getString("hora_chegada"), RS.getString("km_chegada"), RS.getString("destino")};
                Tabela.addRow(Linha);
            }

        }catch(Exception e){
         JOptionPane.showMessageDialog(null,e.getMessage(),"Atenção",JOptionPane.WARNING_MESSAGE);
        }

        Conexao.Desconectar();

    }

    private void Impressao(String Codigo){

        try {

            String SQL;
            
            SQL = "select tve.placa, tmo.nome, (tcha.km) as km_inicial, to_char(tcha.data, 'DD/MM/YYYY') as data_inicial, ";
            SQL = SQL + "(tcha.hora) as hora_inicial, tcha.destino, (tcd.km) as km_final, ";
            SQL = SQL + "to_char(tcd.data, 'DD/MM/YYYY') as data_final, (tcd.hora) as hora_final ";
            SQL = SQL + "from t_chaves tcha ";
            SQL = SQL + "inner join t_veiculo tve on tve.chassis = tcha.chassis_cod ";
            SQL = SQL + "inner join t_motorista tmo on tmo.cpf = tcha.cpf_cod ";
            SQL = SQL + "inner join t_chaves_devolucao tcd on tcd.codigo = tcha.codigo ";
            SQL = SQL + "where tcha.codigo = " + Integer.parseInt(Codigo) + " ";
            SQL = SQL + "and tcha.exclusao = 0 ";

            Conexao = new ConexaoAccess();
            Conexao.Conectar();
            Conexao.setSQL(SQL);

            JRResultSetDataSource jrRS = new JRResultSetDataSource(Conexao.Consultar());
            InputStream is = getClass().getResourceAsStream("/reports/historicocarro.jasper");

            JasperPrint print = JasperFillManager.fillReport(is, new HashMap(), jrRS);
            JasperViewer viewer = new JasperViewer(print, false);

            viewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            viewer.setVisible(true);

        } catch (Exception Erro) {
            JOptionPane.showMessageDialog(null, "Erro na busca: " + Erro.getMessage());
            System.out.println(Erro);
        }

    }

}
