/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Motorista.java
 *
 * Created on 06/10/2009, 11:13:34
 */

package controle;

import classes.Combo;
import classes.ConexaoAccess;
import classes.Funcoes;
import classes.ValidaDocumentos;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.MouseAdapter; 
import java.awt.event.MouseEvent;
import javax.swing.ComboBoxModel;

/**
 *
 * @author Jeferson
 */
public class Motorista extends javax.swing.JInternalFrame {
    
    private ConexaoAccess Conexao;
    private ConexaoAccess Conexao2;
    private Funcoes Fun;
    private ValidaDocumentos VD;
    public String Resultado;
    boolean Tela = false;
    int CapturarLinha;

    /** Creates new form Motorista */
    public Motorista() {
        initComponents();
        form(Tela);
        JogarTipoFone();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ButtonGroupFone = new javax.swing.ButtonGroup();
        jtfCpf = new javax.swing.JTextField();
        jlbCpf = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        jtfEndereco = new javax.swing.JTextField();
        jtfBairro = new javax.swing.JTextField();
        jtfCep = new javax.swing.JTextField();
        jtfCidade = new javax.swing.JTextField();
        jtfRg = new javax.swing.JTextField();
        jtfCnh = new javax.swing.JTextField();
        jlbNome = new javax.swing.JLabel();
        jlbEndereco = new javax.swing.JLabel();
        jlbBairro = new javax.swing.JLabel();
        jlbCep = new javax.swing.JLabel();
        jlbCidade = new javax.swing.JLabel();
        jlbRg = new javax.swing.JLabel();
        jlbCnh = new javax.swing.JLabel();
        jlbValCnh = new javax.swing.JLabel();
        jtfCidadeCod = new javax.swing.JTextField();
        jtfFone = new javax.swing.JFormattedTextField();
        jlbFone = new javax.swing.JLabel();
        jlbDtNasc = new javax.swing.JLabel();
        jbtExcluir = new javax.swing.JButton();
        jbtSalvar = new javax.swing.JButton();
        jbtPesquisar = new javax.swing.JButton();
        jbtNovo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbtAdd = new javax.swing.JButton();
        jbtDel = new javax.swing.JButton();
        jlbTipo = new javax.swing.JLabel();
        jcbTipoFone = new javax.swing.JComboBox();
        jdcValCnh = new com.toedter.calendar.JDateChooser();
        jdcDtNasc = new com.toedter.calendar.JDateChooser();
        jlbCodFone = new javax.swing.JLabel();
        jtfCodFone = new javax.swing.JFormattedTextField();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Motorista");

        jtfCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCpfKeyPressed(evt);
            }
        });

        jlbCpf.setText("CPF");

        jtfCidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCidadeKeyPressed(evt);
            }
        });

        jlbNome.setText("Nome");

        jlbEndereco.setText("Endereço");

        jlbBairro.setText("Bairro");

        jlbCep.setText("CEP");

        jlbCidade.setText("Cidade (F12)");

        jlbRg.setText("RG");

        jlbCnh.setText("CNH");

        jlbValCnh.setText("Val.CNH");

        jtfCidadeCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCidadeCodKeyPressed(evt);
            }
        });

        jtfFone.setFormatterFactory(Fun.setFormatoTelefone());

        jlbFone.setText("Telefone");

        jlbDtNasc.setText("Data de Nascimento");

        jbtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Excluir.png"))); // NOI18N
        jbtExcluir.setText("Excluir");
        jbtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluirActionPerformed(evt);
            }
        });

        jbtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Salvar.png"))); // NOI18N
        jbtSalvar.setText("Salvar");
        jbtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSalvarActionPerformed(evt);
            }
        });

        jbtPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pesquisa.png"))); // NOI18N
        jbtPesquisar.setText("Pesquisar");
        jbtPesquisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtPesquisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPesquisarActionPerformed(evt);
            }
        });

        jbtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Novo.png"))); // NOI18N
        jbtNovo.setText("Novo");
        jbtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNovoActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ação", "Telefone Nº", "Numero", "Cód. Tipo", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTable1.getColumnModel().getColumn(3).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(4).setResizable(false);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(400);

        jbtAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Add.png"))); // NOI18N
        jbtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddActionPerformed(evt);
            }
        });

        jbtDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Delete.png"))); // NOI18N
        jbtDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDelActionPerformed(evt);
            }
        });

        jlbTipo.setText("Tipo");

        jcbTipoFone.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jlbCodFone.setText("Cód. telefone");

        jtfCodFone.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfEndereco)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlbRg)
                                .addGap(168, 168, 168))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtfRg)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbCnh)
                            .addComponent(jtfCnh, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbValCnh)
                            .addComponent(jdcValCnh, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbDtNasc)
                            .addComponent(jdcDtNasc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jbtNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtPesquisar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbEndereco)
                            .addComponent(jlbCidade)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlbCpf))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlbNome)
                                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlbBairro)
                                    .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfCep, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jlbCep)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfCidadeCod, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(jlbCodFone)
                            .addComponent(jtfCodFone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtfFone, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jcbTipoFone, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jlbFone)
                                        .addGap(84, 84, 84)
                                        .addComponent(jlbTipo)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbtAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtDel))
                            .addComponent(jtfCidade))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbCpf)
                    .addComponent(jlbNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlbRg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbCnh)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jlbValCnh)
                                .addComponent(jlbDtNasc)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdcDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdcValCnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbEndereco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbBairro)
                    .addComponent(jlbCep))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbCidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfCidadeCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbFone)
                            .addComponent(jlbTipo)
                            .addComponent(jlbCodFone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfFone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbTipoFone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCodFone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jbtDel)
                    .addComponent(jbtAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jbtSalvar)
                        .addComponent(jbtNovo))
                    .addComponent(jbtExcluir)
                    .addComponent(jbtPesquisar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void CarregarDados(int codigo){
        jtfCpf.setText(Integer.toString(codigo));
    }
    
    private void NovoRegistro(String ValCNH, String Data){

        String SQL;
        SQL = "insert into t_motorista (cpf, nome, endereco, bairro, cep, cidade, rg, cnh, val_cnh, data_nascimento, exclusao";
        SQL = SQL + ") values('";
        SQL = SQL + jtfCpf.getText() + "', '" + jtfNome.getText() + "', '" + jtfEndereco.getText() + "', '";
        SQL = SQL + jtfBairro.getText() + "', '" + jtfCep.getText() + "', " + jtfCidadeCod.getText() + ", '";
        SQL = SQL + jtfRg.getText() + "', '" + jtfCnh.getText() + "', '" + ValCNH + "', '";
        SQL = SQL + Data + "', 0)";
        
        Conexao.setSQL(SQL);
        Conexao.Executar();

        int linha_total = jTable1.getRowCount();
        int contador = 1;

        while(contador <= linha_total){

            int linha = contador - 1;

            String SQL2 = null;

            String Status = "", TipoFone = "", NumTelefone = "", CodTipo = "";

            Status = "INC";
            TipoFone = jTable1.getValueAt(linha, 1).toString();
            NumTelefone = jTable1.getValueAt(linha, 2).toString();
            CodTipo = jTable1.getValueAt(linha, 3).toString();

            Fun = new Funcoes();
            String Codigo = (Fun.Proximo("codigo", "t_motorista_fone", "where cpf_motorista = " + jtfCpf.getText()));

            if ( Status.equals("INC")){

                    SQL2 = "insert into t_motorista_fone (codigo, cpf_motorista, num_telefone, ";
                    SQL2 = SQL2 + "tipo_fone, exclusao) values (";
                    SQL2 = SQL2 + "" + Codigo + ", ";
                    SQL2 = SQL2 + "" + jtfCpf.getText() + ", ";
                    SQL2 = SQL2 + "" + NumTelefone + ", ";
                    SQL2 = SQL2 + "" + TipoFone + ", ";
                    SQL2 = SQL2 + "0)";

                    Conexao2.setSQL(SQL2);                    
                    Conexao2.Executar();

                    contador++;
                }                    
            }
        
    }

    private void jtfCpfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCpfKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){

            CarregaDados(jtfCpf.getText());

        }
    }//GEN-LAST:event_jtfCpfKeyPressed


    private void jtfCidadeCodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCidadeCodKeyPressed
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            PuxaCidade(Integer.parseInt(jtfCidade.getText()));
        }
        if(evt.getKeyCode() == KeyEvent.VK_F12){
            SubPesquisaCidade A = new SubPesquisaCidade();
            A.setVisible(true);
            JDesktopPane JDP = this.getDesktopPane();
            JDP.add(A);
            A.centralizar(JDP);
            try{
                A.setSelected(true);
                A.SetSubCidade(this);
                A.Validador("Motorista");
            }catch (Exception E){
                JOptionPane.showMessageDialog(null, "Erro: " + E);
            }
            A.setVisible(true);
        }
        
    }//GEN-LAST:event_jtfCidadeCodKeyPressed

    private void jtfCidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCidadeKeyPressed
        
        if(evt.getKeyCode() == KeyEvent.VK_F12){
            SubPesquisaCidade A = new SubPesquisaCidade();
            A.setVisible(true);
            JDesktopPane JDP = this.getDesktopPane();
            JDP.add(A);
            A.centralizar(JDP);
            try{
                A.setSelected(true);
                A.SetSubCidade(this);
            }catch (Exception E){
                JOptionPane.showMessageDialog(null, "Erro: " + E);
            }
            A.setVisible(true);
        }
        
    }//GEN-LAST:event_jtfCidadeKeyPressed

    private void jbtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluirActionPerformed

        Object[] botoes = { "Sim", "Não" };

        int resposta;

        resposta = JOptionPane.showOptionDialog(null, "Você deseja realmente excluir este registro?", "Confirma exclusão", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE, null, botoes, botoes[0]);

        if(resposta == JOptionPane.YES_OPTION){

            String SQL = "update t_motorista set exclusao = 1 where cpf = '" + jtfCpf.getText() + "'";

            Conexao = new ConexaoAccess();
            Conexao.Conectar();
            Conexao.setSQL(SQL);
            Conexao.Executar();
            Conexao.Desconectar();

            Limpar();

        }

        jtfCpf.requestFocus();

    }//GEN-LAST:event_jbtExcluirActionPerformed

    private void jbtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSalvarActionPerformed

        Conexao = new ConexaoAccess();
        Conexao.Conectar();
        Conexao.setSQL("select * from t_motorista where cpf = '" + jtfCpf.getText() + "' ");
        ResultSet RS = Conexao.Consultar();

        try {

            SimpleDateFormat DtNasc = new SimpleDateFormat("dd/MM/yyyy");  
            String dtnasc = DtNasc.format(jdcDtNasc.getDate());  

            SimpleDateFormat ValCnh = new SimpleDateFormat("dd/MM/yyyy");  
            String valcnh = ValCnh.format(jdcValCnh.getDate());  
            
            if(RS.next()){
                String SQL;
                
                SQL = "update t_motorista set nome = '" + jtfNome.getText() + "', endereco = '" + jtfEndereco.getText();
                SQL = SQL + "', bairro = '" + jtfBairro.getText() + "', cep = '" + jtfCep.getText() + "', cidade = ";
                SQL = SQL + jtfCidadeCod.getText() + ", rg = '" + jtfRg.getText() + "', cnh = '" + jtfCnh.getText();
                SQL = SQL + "', val_cnh = '" + valcnh + "', data_nascimento = '" + dtnasc + "' ";
                SQL = SQL + "where cpf = '" + jtfCpf.getText() + "'";
                
                System.out.println(SQL);
                
                Conexao.setSQL(SQL);
                Conexao.Executar();
                
                int linha_total = jTable1.getRowCount();
                int contador = 1;

                while(contador <= linha_total){

                    int linha = contador - 1;

                    String SQL2 = null;

                    String Status = "", CodTabela = "", TipoFone = "", NumTelefone = "", CodTipo = "";

                    Status = jTable1.getValueAt(linha, 0).toString();
                    CodTabela = jTable1.getValueAt(linha, 1).toString();
                    NumTelefone = jTable1.getValueAt(linha, 2).toString();
                    CodTipo = jTable1.getValueAt(linha, 3).toString();

                    Fun = new Funcoes();
                    String Codigo = (Fun.Proximo("codigo", "t_motorista_fone", "where cpf_motorista = '" + jtfCpf.getText() + "' "));

                    if (Status.equals("INC")){

                        SQL2 = "insert into t_motorista_fone (codigo, cpf_motorista, num_telefone, ";
                        SQL2 = SQL2 + "tipo_fone, exclusao) values (";
                        SQL2 = SQL2 + "" + Codigo + ", ";
                        SQL2 = SQL2 + "'" + jtfCpf.getText() + "', ";
                        SQL2 = SQL2 + "'" + NumTelefone + "', ";
                        SQL2 = SQL2 + "" + CodTipo + ", ";
                        SQL2 = SQL2 + "0)";

                        System.out.println(SQL2);
                            
                    } else if (Status.equals("UPD")){

                        SQL2 = "update t_motorista_fone set ";
                        SQL2 = SQL2 + "num_telefone = '" + NumTelefone + "', ";
                        SQL2 = SQL2 + "tipo_fone = " + CodTipo + " ";                            
                        SQL2 = SQL2 + "where codigo = " + CodTabela + " ";
                        SQL2 = SQL2 + "and cpf_motorista = '" + jtfCpf.getText() + "' ";
                        SQL2 = SQL2 + "and exclusao = 0 ";


                    } else if (Status.equals("DEL")){

                        SQL2 = "update t_motorista_fone set exclusao = 1 where codigo = " + CodTabela + " ";
                        SQL2 = SQL2 + "and cpf_motorista = '" + jtfCpf.getText() + "' ";

                    }                    
                    
                    Conexao2.setSQL(SQL2);                    
                    Conexao2.Executar();

                    contador++;
                    
                }                
                
            } else {
                Object[] botoes = { "Sim", "Não" };

                VD = new ValidaDocumentos();

                if (!(VD.validaCPF(jtfCpf.getText()))) {

                    int resposta;

                    resposta = JOptionPane.showOptionDialog(null, "CNPJ inválido! deseja continuar", "Opaaaaa!!!", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE, null, botoes, botoes[0]);

                    if(resposta == JOptionPane.YES_OPTION){

                        NovoRegistro(valcnh, dtnasc);

                    }

                } else {

                    NovoRegistro(valcnh, dtnasc);

                }

            }

        } catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }

        Conexao.Desconectar();

        Limpar();

        jtfCpf.requestFocus();

    }//GEN-LAST:event_jbtSalvarActionPerformed

    private void jbtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPesquisarActionPerformed

        PesquisaMotorista A = new PesquisaMotorista();
        A.setVisible(true);
        JDesktopPane JDP = this.getDesktopPane();
        JDP.add(A);
        A.centralizar(JDP);
        try{
            A.setSelected(true);
            A.SetMotorista(this);
        }catch (Exception E){
            JOptionPane.showMessageDialog(null, "Erro: " + E);
        }
        A.setVisible(true);

    }//GEN-LAST:event_jbtPesquisarActionPerformed

    private void jbtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNovoActionPerformed

        Limpar();

        jtfCpf.requestFocus();

    }//GEN-LAST:event_jbtNovoActionPerformed

    private void jbtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddActionPerformed
        
        String CodTipoFone = ((Combo)jcbTipoFone.getSelectedItem()).getKey();
        String TipoFone = ((Combo)jcbTipoFone.getSelectedItem()).toString();
        
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        
        if (jtfCodFone.equals(null)){
                        
            Object[] Linha = {"INC", "", jtfFone.getText(), CodTipoFone, TipoFone};
            modelo.addRow(Linha);
            
        } else {
                       
            modelo.setValueAt("UPD", CapturarLinha, 0);
            modelo.setValueAt(jtfCodFone.getText(), CapturarLinha, 1);
            modelo.setValueAt(jtfFone.getText(), CapturarLinha, 2);
            modelo.setValueAt(CodTipoFone, CapturarLinha, 3);
            modelo.setValueAt(TipoFone, CapturarLinha, 4);            
            
        }
        
        Add();     
        
    }//GEN-LAST:event_jbtAddActionPerformed

    private void Add(){

        Fun = new Funcoes();
        
        jtfFone.setValue(null);
        jtfFone.setText("");
        jtfFone.setFormatterFactory(Fun.setFormatoTelefone());

        jcbTipoFone.removeAllItems();
        JogarTipoFone();

        jtfFone.requestFocus();

    }
    
    private void jbtDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDelActionPerformed
        
        String Operacao = "DEL";

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        int Linha = CapturarLinha;

        String OP = String.valueOf(modelo.getValueAt(CapturarLinha, 0));

        if (OP.equals("DEL")){
            if (jtfFone.getText().trim().equals("")) {
                Operacao = "INS";
            } else {
                Operacao = "UPD";
            }
            modelo.setValueAt(Operacao, Linha, 0);
        } else {
            Operacao = "DEL";
            modelo.setValueAt(Operacao, Linha, 0);
        }
        
    }//GEN-LAST:event_jbtDelActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       
        CapturarLinha = jTable1.getSelectedRow();       
        
        jTable1.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                   String Codigo, Telefone, TipoTelefone;
                   
                   jtfCodFone.setText(jTable1.getValueAt(CapturarLinha, 1).toString());
                   jtfFone.setText(jTable1.getValueAt(CapturarLinha, 2).toString());
                   
                   TipoTelefone = jTable1.getValueAt(CapturarLinha, 4).toString();
                   ComboBoxModel CBM;
                   CBM = jcbTipoFone.getModel();
                   CBM.setSelectedItem(TipoTelefone);                   
                }
            }
        });
        
    }//GEN-LAST:event_jTable1MouseClicked
  
    
    public void JogarTipoFone(){
        
        jcbTipoFone.removeAllItems();
        try {
            Conexao = new ConexaoAccess();
            Conexao.Conectar();
            Conexao.setSQL("select codigo, nome from t_tipo_fone where exclusao = 0 order by nome ");
            ResultSet RS = Conexao.Consultar();
            DefaultComboBoxModel Modelo = new DefaultComboBoxModel();
            while(RS.next()){
                Combo cboF = new Combo(RS.getString("codigo"),RS.getString("nome"));
                Modelo.addElement(cboF);
            }
            jcbTipoFone.setModel(Modelo);
        } catch(Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro: " + Erro);
        }
        
    }
    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Motorista().setVisible(true);
            }
        });
    }

    public void centralizar(JDesktopPane dp) {
        Dimension ds = dp.getSize();
        Dimension dw = this.getSize();
        this.setLocation((ds.width - dw.width) / 2, (ds.height - dw.height) / 2);
    }    

    public void CarregaDados(String Codigo){

        String SQL;
        SQL = "select *, to_char(val_cnh,'DD/MM/YYYY') as val_cnh2, to_char(data_nascimento,'DD/MM/YYYY') as dtnasc ";
        SQL = SQL + "from t_motorista where CPF = '" + Codigo + "' and exclusao = 0 ";
                
        Conexao = new ConexaoAccess();
        Conexao.Conectar() ;
        Conexao.setSQL(SQL);

        String SQL2;
        SQL2 = "select codigo, num_telefone, tipo_fone from t_motorista_fone ";
        SQL2 = SQL2 + "where cpf_motorista = '" + Codigo + "' and exclusao = 0";
        
        Conexao2 = new ConexaoAccess();
        Conexao2.Conectar() ;
        Conexao2.setSQL(SQL2);
        
        ResultSet RS = Conexao.Consultar();
        ResultSet RS2 = Conexao2.Consultar();

        try{
            if (RS.next()){
                jtfCpf.setText(RS.getString("cpf"));
                jtfBairro.setText(RS.getString("bairro"));
                jtfCep.setText(RS.getString("cep"));
                jtfCidadeCod.setText(RS.getString("cidade"));
                Fun = new Funcoes();
                jtfCidade.setText(Fun.NomeCidade(Integer.parseInt(RS.getString("cidade"))));
                jtfCnh.setText(RS.getString("cnh"));
                jtfEndereco.setText(RS.getString("endereco"));
                jtfNome.setText(RS.getString("Nome"));
                jtfRg.setText(RS.getString("rg"));
                
                String dateValue = RS.getString("val_cnh2");
                java.util.Date date = new SimpleDateFormat("dd/MM/yyyy").parse(dateValue);
                jdcValCnh.setDate(date);
                
                String dateNasc = RS.getString("dtnasc");
                java.util.Date datenasc = new SimpleDateFormat("dd/MM/yyyy").parse(dateNasc);
                jdcDtNasc.setDate(datenasc);

                while(RS2.next()){

                    String Status = "", Cod = "", NumTelefone = "", CodTipo = "", Fone = "";

                    Cod = RS2.getString("codigo");
                    NumTelefone = RS2.getString("num_telefone");
                    CodTipo = RS2.getString("tipo_fone");
                    Fone = PuxaTipoFone(Integer.parseInt(CodTipo));

                    DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                    Object[] Linha = {"UPD", Cod, NumTelefone, CodTipo, Fone};
                    modelo.addRow(Linha);                    

                }                            
                
            }
        }catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }
        
        jtfNome.requestFocus();
        Conexao.Desconectar();

    }

    public void PuxaCidade(int Codigo){
        
        String SQL;

        SQL = "select cid.codcidade, cid.cidade, cid.coduf, cuf.uf ";
        SQL = SQL + "from cidade cid ";
        SQL = SQL + "inner join cidade_uf cuf on cuf.coduf = cid.coduf ";
        SQL = SQL + "where cid.codcidade = " + Codigo + " ";
        SQL = SQL + "and cid.exclusao = 0 ";

        Conexao = new ConexaoAccess();
        Conexao.Conectar() ;
        Conexao.setSQL(SQL);

        ResultSet RS = Conexao.Consultar();

        try{
            if (RS.next()){

                jtfCidadeCod.setText(RS.getString("codcidade"));
                jtfCidade.setText(RS.getString("cidade"));
                
            }
        }catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }

    }

    private boolean form (boolean valor){

        boolean verifica = false;

            if (valor) {
                this.dispose();
                Tela = true;
            }

        return verifica;

    }

    private void Limpar(){

        jtfBairro.setText("");
        jtfCep.setText("");
        jtfCidade.setText("");
        jtfCidadeCod.setText("");
        jtfCnh.setText("");
        jtfCpf.setText("");
        jtfEndereco.setText("");
        jtfNome.setText("");
        jtfRg.setText("");
        jdcValCnh.setDate(null);
        jtfCodFone.setText("");
        jtfFone.setText("");
        jdcDtNasc.setDate(null);
        
        jcbTipoFone.removeAllItems();
        JogarTipoFone();
        
        ((DefaultTableModel) jTable1.getModel()).setNumRows(0);
        jTable1.updateUI();

    }
    
    public String PuxaTipoFone(int Codigo){
        
        String SQL;
        String Tipo = null;
        
        SQL = "select nome ";
        SQL = SQL + "from t_tipo_fone ";
        SQL = SQL + "where codigo = " + Codigo + " ";
        SQL = SQL + "and exclusao = 0 ";

        Conexao = new ConexaoAccess();
        Conexao.Conectar() ;
        Conexao.setSQL(SQL);

        ResultSet RS = Conexao.Consultar();

        try{
            if (RS.next()){

                Tipo = RS.getString("nome");
                
            }
        }catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }
        
        return Tipo;
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup ButtonGroupFone;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtAdd;
    private javax.swing.JButton jbtDel;
    private javax.swing.JButton jbtExcluir;
    private javax.swing.JButton jbtNovo;
    private javax.swing.JButton jbtPesquisar;
    private javax.swing.JButton jbtSalvar;
    private javax.swing.JComboBox jcbTipoFone;
    private com.toedter.calendar.JDateChooser jdcDtNasc;
    private com.toedter.calendar.JDateChooser jdcValCnh;
    private javax.swing.JLabel jlbBairro;
    private javax.swing.JLabel jlbCep;
    private javax.swing.JLabel jlbCidade;
    private javax.swing.JLabel jlbCnh;
    private javax.swing.JLabel jlbCodFone;
    private javax.swing.JLabel jlbCpf;
    private javax.swing.JLabel jlbDtNasc;
    private javax.swing.JLabel jlbEndereco;
    private javax.swing.JLabel jlbFone;
    private javax.swing.JLabel jlbNome;
    private javax.swing.JLabel jlbRg;
    private javax.swing.JLabel jlbTipo;
    private javax.swing.JLabel jlbValCnh;
    private javax.swing.JTextField jtfBairro;
    private javax.swing.JTextField jtfCep;
    private javax.swing.JTextField jtfCidade;
    private javax.swing.JTextField jtfCidadeCod;
    private javax.swing.JTextField jtfCnh;
    private javax.swing.JFormattedTextField jtfCodFone;
    private javax.swing.JTextField jtfCpf;
    private javax.swing.JTextField jtfEndereco;
    private javax.swing.JFormattedTextField jtfFone;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfRg;
    // End of variables declaration//GEN-END:variables

}
