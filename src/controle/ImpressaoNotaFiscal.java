/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImpressaoNotaFiscal.java
 *
 * Created on 14/01/2010, 07:54:02
 */

package controle;

import classes.ConexaoAccess;
import classes.Funcoes;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.io.InputStream;
import java.util.HashMap;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Jeferson
 */
public class ImpressaoNotaFiscal extends javax.swing.JInternalFrame {

    private ConexaoAccess Conexao;
    private Funcoes Fun;

    /** Creates new form ImpressaoNotaFiscal */
    public ImpressaoNotaFiscal() {
        initComponents();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlbInfo = new javax.swing.JLabel();
        jtfNotaFiscal = new javax.swing.JTextField();
        jlbFornecedor = new javax.swing.JLabel();
        btnImprimir = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setClosable(true);
        setTitle("Impress√£o de Nota Fiscal");

        jlbInfo.setText("Digite a nota fiscal a ser impressa");

        jtfNotaFiscal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfNotaFiscalKeyPressed(evt);
            }
        });

        jlbFornecedor.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/printer.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        btnImprimir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnImprimirKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jtfNotaFiscal, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jlbInfo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(btnImprimir)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfNotaFiscal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImprimir)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfNotaFiscalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNotaFiscalKeyPressed
        
    }//GEN-LAST:event_jtfNotaFiscalKeyPressed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed

        ChamaImpressao();

    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnImprimirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnImprimirKeyPressed
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            ChamaImpressao();
        }
        
    }//GEN-LAST:event_btnImprimirKeyPressed

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImpressaoNotaFiscal().setVisible(true);
            }
        });
    }

    public void centralizar(JDesktopPane dp) {
        Dimension ds = dp.getSize();
        Dimension dw = this.getSize();
        this.setLocation((ds.width - dw.width) / 2, (ds.height - dw.height) / 2);
    }

    private void ChamaImpressao(){

        if (!(jtfNotaFiscal.getText().equals(""))) {
            jlbFornecedor.setText(NomeFornecedor(jtfNotaFiscal.getText()));
            Impressao();
        }

    }

    private void Impressao(){

        try {

            String SQL;
            String NF = jtfNotaFiscal.getText();

            SQL = "select tnf.codigo, ";
            SQL = SQL + "tfo.nomefantasia, tfo.nomefornecedor, tfo.enderecofornecedor, tfo.bairrofornecedor, cid.cidade, ";
            SQL = SQL + "tfo.cepfornecedor, tfo.fone1fornecedor, tfo.fone2fornecedor, tfo.faxfornecedor, tfo.iefornecedor, ";
            SQL = SQL + "tfo.imfornecedor,tfo.contatofornecedor, tfo.emailfornecedor, ";
            SQL = SQL + "to_char(tnf.data, 'DD/MM/YYYY') as data, (tnfi.codigo) as item, (tpr.nome) as produto, tnfi.qtde, ";
            SQL = SQL + "uni.abreviacao, tnfi.preco, (tnfi.qtde * tnfi.preco) as subtotal ";
            SQL = SQL + "from t_nota_fiscal tnf ";
            SQL = SQL + "inner join t_fornecedor tfo on tfo.cnpjcpf = tnf.fornecedor_cod ";
            SQL = SQL + "inner join t_nota_fiscal_item tnfi on tnfi.nf_cod = tnf.codigo ";
            SQL = SQL + "inner join t_produto tpr on tpr.codigo = tnfi.produto_cod ";
            SQL = SQL + "inner join unidade uni on uni.codunidade = tpr.unidade_cod ";
            SQL = SQL + "inner join cidade cid on cid.codcidade = tfo.cidadecod ";
            SQL = SQL + "where tnf.codigo = '" + NF + "' ";

            System.out.println(SQL);

            Conexao = new ConexaoAccess();
            Conexao.Conectar();
            Conexao.setSQL(SQL);

            JRResultSetDataSource jrRS = new JRResultSetDataSource(Conexao.Consultar());
            InputStream is = getClass().getResourceAsStream("/reports/notafiscal.jasper");

            JasperPrint print = JasperFillManager.fillReport(is, new HashMap(), jrRS);
            JasperViewer viewer = new JasperViewer(print, false);

            viewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            viewer.setVisible(true);

        } catch (Exception Erro) {
            JOptionPane.showMessageDialog(null, "Erro na busca: " + Erro.getMessage());
            System.out.println(Erro);
        }

    }

    private String NomeFornecedor (String NF){

        String Nome = null;
        String SQL = null;

        SQL = "select (tfo.nomefornecedor) as retorno ";
        SQL = SQL + "from t_nota_fiscal tnf ";
        SQL = SQL + "inner join t_fornecedor tfo on tfo.cnpjcpf = tnf.fornecedor_cod ";
        SQL = SQL + "where tnf.codigo = '" + NF + "'";

        Fun = new Funcoes();
        Nome = Fun.FuncaoSQL(SQL);

        return Nome;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImprimir;
    private javax.swing.JLabel jlbFornecedor;
    private javax.swing.JLabel jlbInfo;
    private javax.swing.JTextField jtfNotaFiscal;
    // End of variables declaration//GEN-END:variables

}
