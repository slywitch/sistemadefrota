/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConsultaMotorista.java
 *
 * Created on 08/01/2010, 08:40:18
 */

package controle;

import classes.Combo;
import classes.ConexaoAccess;
import classes.Funcoes;
import java.awt.Dimension;
import java.sql.ResultSet;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jeferson
 */
public class ConsultaMotorista extends javax.swing.JInternalFrame {

    private ConexaoAccess Conexao;
    private Funcoes Fun;
    
    /** Creates new form ConsultaMotorista */
    public ConsultaMotorista() {
        initComponents();
        JogarMotorista();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlbInfo = new javax.swing.JLabel();
        cboMotorista = new javax.swing.JComboBox();
        jtpConsulta = new javax.swing.JTabbedPane();
        jspRastreamento = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jspMultas = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jbtNovo = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setClosable(true);
        setTitle("Consulta de Motorista");

        jlbInfo.setText("Selecione o Motorista");

        cboMotorista.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboMotorista.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMotoristaItemStateChanged(evt);
            }
        });

        jtpConsulta.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Veículo", "Data Saída", "Data Chegada"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jspRastreamento.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(5);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(30);
        jTable1.getColumnModel().getColumn(3).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(30);

        jtpConsulta.addTab("Rastreamento", jspRastreamento);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data", "Veículo", "Código Multa", "Pontos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jspMultas.setViewportView(jTable2);
        jTable2.getColumnModel().getColumn(0).setResizable(false);
        jTable2.getColumnModel().getColumn(0).setPreferredWidth(5);
        jTable2.getColumnModel().getColumn(1).setResizable(false);
        jTable2.getColumnModel().getColumn(1).setPreferredWidth(20);
        jTable2.getColumnModel().getColumn(2).setResizable(false);
        jTable2.getColumnModel().getColumn(2).setPreferredWidth(150);
        jTable2.getColumnModel().getColumn(3).setResizable(false);
        jTable2.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTable2.getColumnModel().getColumn(4).setResizable(false);
        jTable2.getColumnModel().getColumn(4).setPreferredWidth(5);

        jtpConsulta.addTab("Multas", jspMultas);

        jbtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Novo.png"))); // NOI18N
        jbtNovo.setText("Novo");
        jbtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtpConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbInfo)
                            .addComponent(cboMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbtNovo)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtpConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtNovo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtpConsulta.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboMotoristaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMotoristaItemStateChanged
        if (cboMotorista.getItemCount()>0){
            String Motorista = ((Combo)cboMotorista.getSelectedItem()).getKey();

            ConsultaRastreamento(Motorista);
            ConsultaMultas(Motorista);
        }
    }//GEN-LAST:event_cboMotoristaItemStateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        SubConsultaVeiculoRastreamento A = new SubConsultaVeiculoRastreamento();
        A.setVisible(true);
        JDesktopPane JDP = this.getDesktopPane();
        JDP.add(A);
        A.centralizar(JDP);
        try{
            A.setSelected(true);
        }catch (Exception E){
            JOptionPane.showMessageDialog(null, "Erro: " + E);
        }
        A.setVisible(true);

        A.CarregarDados(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        String Motorista = ((Combo)cboMotorista.getSelectedItem()).getKey();

        SubConsultaVeiculoMulta A = new SubConsultaVeiculoMulta();
        A.setVisible(true);
        JDesktopPane JDP = this.getDesktopPane();
        JDP.add(A);
        A.centralizar(JDP);
        try{
            A.setSelected(true);
            A.setCPF(Motorista);
            A.setCodigo(jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString());
        }catch (Exception E){
            JOptionPane.showMessageDialog(null, "Erro: " + E);
        }
        A.setVisible(true);

        A.CarregarDados(jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString());
    }//GEN-LAST:event_jTable2MouseClicked

    private void jbtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNovoActionPerformed

        Limpar();

        cboMotorista.requestFocus();

    }//GEN-LAST:event_jbtNovoActionPerformed

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Motorista().setVisible(true);
            }
        });
    }

    public void centralizar(JDesktopPane dp) {
        Dimension ds = dp.getSize();
        Dimension dw = this.getSize();
        this.setLocation((ds.width - dw.width) / 2, (ds.height - dw.height) / 2);
    }

    private void Limpar(){

        cboMotorista.removeAllItems();
        JogarMotorista();

        ((DefaultTableModel) jTable1.getModel()).setNumRows(0);
        jTable1.updateUI();

        ((DefaultTableModel) jTable2.getModel()).setNumRows(0);
        jTable2.updateUI();

    }

    private void JogarMotorista(){
        cboMotorista.removeAllItems();
        try {
            Conexao = new ConexaoAccess();
            Conexao.Conectar();
            Conexao.setSQL("select (cpf) as codigo, nome from t_motorista order by nome");
            ResultSet RS = Conexao.Consultar();
            DefaultComboBoxModel Modelo = new DefaultComboBoxModel();
            while(RS.next()){
                Combo CB = new Combo(RS.getString("codigo"),RS.getString("nome"));
                Modelo.addElement(CB);
            }
            cboMotorista.setModel(Modelo);
        }catch(Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro: " + Erro);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboMotorista;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton jbtNovo;
    private javax.swing.JLabel jlbInfo;
    private javax.swing.JScrollPane jspMultas;
    private javax.swing.JScrollPane jspRastreamento;
    private javax.swing.JTabbedPane jtpConsulta;
    // End of variables declaration//GEN-END:variables

    private void ConsultaRastreamento(String Motorista){

        String SQL;

        SQL = "select tch.codigo, tve.placa, to_char(tch.data,'DD/MM/YYYY') as data_saida, to_char(tcd.data,'DD/MM/YYYY') as data_chegada ";
        SQL = SQL + "from t_chaves tch ";
        SQL = SQL + "inner join t_motorista tmo on tmo.cpf = tch.cpf_cod ";
        SQL = SQL + "inner join t_chaves_devolucao tcd on tcd.codigo = tch.codigo ";
        SQL = SQL + "inner join t_veiculo tve on tve.chassis = tch.chassis_cod ";
        //SQL = SQL + "where tve.placa = '" + Placa + "' ";
        SQL = SQL + "where tmo.cpf = '" + Motorista + "' ";

        try{

            Conexao = new ConexaoAccess();
            Conexao.Conectar();
            Conexao.setSQL(SQL);

            DefaultTableModel modelo2;
            modelo2 = (DefaultTableModel)jTable1.getModel();
            modelo2.setRowCount(0);

            ResultSet RS = Conexao.Consultar();

            while(RS.next()){
                DefaultTableModel Tabela = (DefaultTableModel) jTable1.getModel();
                Object[] Linha = {RS.getString("codigo"), RS.getString("placa"), RS.getString("data_saida"), RS.getString("data_chegada")};
                Tabela.addRow(Linha);
            }

        }catch(Exception e){
         JOptionPane.showMessageDialog(null,e.getMessage(),"Atenção",JOptionPane.WARNING_MESSAGE);
        }

        Conexao.Desconectar();

    }

    private void ConsultaMultas (String Motorista){

        String SQL;

        SQL = "select tlm.codigo, to_char(tlm.data, 'DD/MM/YYYY') as data, tve.placa, tlm.multa_cod, tpm.gravidade ";
        SQL = SQL + "from t_lancamento_multa tlm ";
        SQL = SQL + "inner join t_motorista tmo on tmo.cpf = tlm.cpf_cod ";
        SQL = SQL + "inner join t_pontuacao_multas tpm on tpm.codigo = tlm.multa_cod ";
        SQL = SQL + "inner join t_veiculo tve on tve.chassis = tlm.chassis_cod ";
        //SQL = SQL + "where tve.placa = '" + Placa + "' ";
        SQL = SQL + "where tmo.cpf = '" + Motorista + "' ";

        try{

            Conexao = new ConexaoAccess();
            Conexao.Conectar();
            Conexao.setSQL(SQL);

            DefaultTableModel modelo2;
            modelo2 = (DefaultTableModel)jTable2.getModel();
            modelo2.setRowCount(0);

            ResultSet RS = Conexao.Consultar();

            while(RS.next()){
                DefaultTableModel Tabela = (DefaultTableModel) jTable2.getModel();
                Object[] Linha = {RS.getString("codigo"), RS.getString("data"), RS.getString("placa"), RS.getString("multa_cod"), Gravidade(Integer.parseInt(RS.getString("gravidade")))};
                Tabela.addRow(Linha);
            }

        }catch(Exception e){
         JOptionPane.showMessageDialog(null,e.getMessage(),"Atenção",JOptionPane.WARNING_MESSAGE);
        }

        Conexao.Desconectar();

    }

    private String Gravidade(int Pontos){

        String Resultado = null;

        Fun = new Funcoes();
        Resultado = Pontos + " - " + Fun.GravidadeMulta(Pontos);

        return Resultado;

    }

}
