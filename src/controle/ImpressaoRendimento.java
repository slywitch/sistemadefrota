/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImpressaoRendimento.java
 *
 * Created on 08/02/2010, 09:37:11
 */

package controle;

import classes.Combo;
import classes.ConexaoAccess;
import classes.Funcoes;
import java.awt.Dimension;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.io.InputStream;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Jeferson
 */
public class ImpressaoRendimento extends javax.swing.JInternalFrame {

    private ConexaoAccess Conexao;
    private Funcoes Fun;

    /** Creates new form ImpressaoRendimento */
    public ImpressaoRendimento() {
        initComponents();
        JogarVeiculo();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlbInfo = new javax.swing.JLabel();
        cboVeiculo = new javax.swing.JComboBox();
        btnImprimir = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setClosable(true);
        setTitle("Impressão de rendimento do veículo");

        jlbInfo.setText("Selecione o Veículo");

        cboVeiculo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboVeiculo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboVeiculoItemStateChanged(evt);
            }
        });

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/printer.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbInfo)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(btnImprimir)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImprimir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboVeiculoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboVeiculoItemStateChanged
        if (cboVeiculo.getItemCount()>0){
            
        }
}//GEN-LAST:event_cboVeiculoItemStateChanged

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed

        String Placa = ((Combo)cboVeiculo.getSelectedItem()).toString();
        Rendimento(Placa);
        Impressao();
        
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void Rendimento(String Placa){

        String SQL;
        String sql;

        SQL = "select tmi.codigo, tmi.fornecedor_cod, tfo.nomefornecedor, tmi.evento_item_cod, tei.descricao, tmi.produto_cod, ";
        SQL = SQL + "(tpr.nome) as combustivel, tmo.km, tmi.qtde, uni.abreviacao, tve.placa ";
        SQL = SQL + "from t_movimentacao_item tmi ";
        SQL = SQL + "inner join t_movimentacao tmo on tmo.codigo = tmi.movimentacao_cod ";
        SQL = SQL + "inner join t_fornecedor tfo on tfo.cnpjcpf = tmi.fornecedor_cod ";
        SQL = SQL + "inner join t_evento_item tei on tei.codigo = tmi.evento_item_cod ";
        SQL = SQL + "inner join t_produto tpr on tpr.codigo = tmi.produto_cod ";
        SQL = SQL + "inner join t_veiculo tve on tve.chassis = tmo.chassis_cod ";
        SQL = SQL + "inner join unidade uni on uni.codunidade = tpr.unidade_cod ";
        SQL = SQL + "where tmi.evento_item_cod = 1 ";
        SQL = SQL + "and tve.placa = '" + Placa + "' ";
        SQL = SQL + "order by tmo.km desc ";

        System.out.println(SQL);

        try{

            Conexao = new ConexaoAccess();
            Conexao.Conectar();
            Conexao.setSQL(SQL);

            ResultSet RS = Conexao.Consultar();
            //ResultSet rs;

            Double Km1 = 0.00;
            Double Km2 = 0.00;
            Double L1 = 0.00;
            Double L2 = 0.00;

            Double Media = 0.00;

            while(RS.next()){

                Km1 = Double.parseDouble(RS.getString("km"));
                L1 = Double.parseDouble(RS.getString("qtde"));

                if (!(Km2 == 0)) {

                    Double Km = 0.00;

                    Km = Km2 - Km1;

                    Media = CalculoCombustivel(Km, L2);

                } else {
                    DecimalFormat df = new DecimalFormat("###.##");
                    Media = Double.parseDouble(df.format(0));
                }

                sql = "insert into t_temp_rendimento (codigo, movimentacao_cod, fornecedor_cod, evento_item_cod, produto_cod, km, qtde, ";
                sql = sql + "abreviacao, placa) values ( ";

                int proximo = Integer.parseInt(Fun.Proximo("t_temp_rendimento"));

                sql = sql + proximo + ", " + RS.getString("movimentacao_cod") + ", '" + RS.getString("fornecedor_cod") + "', ";
                sql = sql + RS.getString("evento_item_cod") + ", " + RS.getString("produto_cod") + ", " +  RS.getString("km") + ", ";
                sql = sql + RS.getString("qtde") + ", '" + RS.getString("abreviacao") + "', '" + RS.getString("movimentacao_cod") + "')";

                System.out.println(sql);

                Conexao = new ConexaoAccess();
                Conexao.Conectar();
                Conexao.setSQL(sql);
                Conexao.Executar();

                proximo++;          

                Km2 = Km1;
                L2 = L1;

            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage(),"Atenção",JOptionPane.WARNING_MESSAGE);
        }

        Conexao.Desconectar();

    }

    private Double CalculoCombustivel(Double Km, Double Litros){

        Double Media = 0.00;

        Media = Km / Litros;

        return Media;

    }

    private void Impressao(){

        String SQL;

        SQL = "select ttr.codigo, ttr.movimentacao_cod, ttr.fornecedor_cod, tfo.nomefornecedor, ttr.evento_item_cod, tei.descricao, ";
        SQL = SQL + "ttr.produto_cod, (tpr.nome) as combustivel, ";
	SQL = SQL + "ttr.km, ttr.qtde, ttr.abreviacao, ttr.placa ";
        SQL = SQL + "from t_temp_rendimento ttr ";
        SQL = SQL + "inner join t_fornecedor tfo on tfo.cnpjcpf = ttr.fornecedor_cod ";
        SQL = SQL + "inner join t_evento_item tei on tei.codigo = ttr.evento_item_cod ";
        SQL = SQL + "inner join t_produto tpr on tpr.codigo = ttr.produto_cod ";
        SQL = SQL + "order by codigo ";

        try{
            Conexao = new ConexaoAccess();
            Conexao.Conectar();
            Conexao.setSQL(SQL);

            JRResultSetDataSource jrRS = new JRResultSetDataSource(Conexao.Consultar());
            InputStream is = getClass().getResourceAsStream("/reports/rendimentoveiculo.jasper");

            JasperPrint print = JasperFillManager.fillReport(is, new HashMap(), jrRS);
            JasperViewer viewer = new JasperViewer(print, false);

            viewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            viewer.setVisible(true);

        } catch (Exception Erro) {
            JOptionPane.showMessageDialog(null, "Erro na busca: " + Erro.getMessage());
            System.out.println(Erro);
        }
        
    }

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImpressaoRendimento().setVisible(true);
            }
        });
    }

    public void centralizar(JDesktopPane dp) {
        Dimension ds = dp.getSize();
        Dimension dw = this.getSize();
        this.setLocation((ds.width - dw.width) / 2, (ds.height - dw.height) / 2);
    }

    private void JogarVeiculo(){
        cboVeiculo.removeAllItems();
        try {
            Conexao = new ConexaoAccess();
            Conexao.Conectar();
            Conexao.setSQL("select (chassis) as codigo, (placa) as nome from t_veiculo order by nome");
            ResultSet RS = Conexao.Consultar();
            DefaultComboBoxModel Modelo = new DefaultComboBoxModel();
            while(RS.next()){
                Combo CB = new Combo(RS.getString("codigo"),RS.getString("nome"));
                Modelo.addElement(CB);
            }
            cboVeiculo.setModel(Modelo);
        } catch(Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro: " + Erro);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImprimir;
    private javax.swing.JComboBox cboVeiculo;
    private javax.swing.JLabel jlbInfo;
    // End of variables declaration//GEN-END:variables

}
