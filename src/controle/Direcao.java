/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Direcao.java
 *
 * Created on 13/11/2009, 07:50:48
 */

package controle;

import classes.Combo;
import classes.ConexaoAccess;
import classes.Funcoes;
import java.awt.Dimension;
import java.sql.ResultSet;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;

/**
 *
 * @author Jeferson
 */
public class Direcao extends javax.swing.JInternalFrame {

    private ConexaoAccess Conexao;
    private Funcoes Fun;

    /** Creates new form Direcao */
    public Direcao() {
        initComponents();
        JogarMotorista();
        JogarVeiculo();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cboMotorista = new javax.swing.JComboBox();
        cboVeiculo = new javax.swing.JComboBox();
        jlbMotorista = new javax.swing.JLabel();
        jlbVeiculo = new javax.swing.JLabel();
        jtfCpf_Cod = new javax.swing.JTextField();
        jtfNomeMotorista = new javax.swing.JTextField();
        jtfPlaca = new javax.swing.JTextField();
        jtfChassis_Cod = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jmbBarra = new javax.swing.JMenuBar();
        jmnArquivo = new javax.swing.JMenu();
        jmnNovo = new javax.swing.JMenuItem();
        jmiSalvar = new javax.swing.JMenuItem();
        jmiExcluir = new javax.swing.JMenuItem();
        jmnPesquisa = new javax.swing.JMenu();
        jmiPesquisar = new javax.swing.JMenuItem();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setClosable(true);
        setTitle("Direção");

        cboMotorista.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboMotorista.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMotoristaItemStateChanged(evt);
            }
        });

        cboVeiculo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboVeiculo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboVeiculoItemStateChanged(evt);
            }
        });

        jlbMotorista.setText("Motorista");

        jlbVeiculo.setText("Veículo");

        jmnArquivo.setText("Arquivo");

        jmnNovo.setText("Novo");
        jmnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnNovoActionPerformed(evt);
            }
        });
        jmnArquivo.add(jmnNovo);

        jmiSalvar.setText("Salvar");
        jmiSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSalvarActionPerformed(evt);
            }
        });
        jmnArquivo.add(jmiSalvar);

        jmiExcluir.setText("Excluir");
        jmiExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExcluirActionPerformed(evt);
            }
        });
        jmnArquivo.add(jmiExcluir);

        jmbBarra.add(jmnArquivo);

        jmnPesquisa.setText("Pesquisa");

        jmiPesquisar.setText("Pesquisar");
        jmnPesquisa.add(jmiPesquisar);

        jmbBarra.add(jmnPesquisa);

        setJMenuBar(jmbBarra);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jtfCpf_Cod)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfNomeMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlbMotorista)
                    .addComponent(cboMotorista, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jtfChassis_Cod)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlbVeiculo))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbMotorista)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCpf_Cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNomeMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jlbVeiculo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfChassis_Cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnNovoActionPerformed
        
        cboMotorista.removeAllItems ();
        cboVeiculo.removeAllItems();

        JogarMotorista();
        JogarVeiculo();
        
    }//GEN-LAST:event_jmnNovoActionPerformed

    private void jmiExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExcluirActionPerformed

        String SQL = "delete from t_direcao where cpf_cod = '" + ((Combo)cboMotorista.getSelectedItem()).getKey() + "'";

        Conexao = new ConexaoAccess();
        Conexao.Conectar();
        Conexao.setSQL(SQL);
        Conexao.Executar();
        Conexao.Desconectar();

        cboMotorista.removeAllItems();
        cboVeiculo.removeAllItems();

        JogarMotorista();
        JogarVeiculo();

        cboMotorista.requestFocus();

    }//GEN-LAST:event_jmiExcluirActionPerformed

    private void jmiSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSalvarActionPerformed
        
        Conexao = new ConexaoAccess();
        Conexao.Conectar();
        Conexao.setSQL("select * from t_direcao where cpf_cod = '" + jtfCpf_Cod.getText() + "'");
        ResultSet RS = Conexao.Consultar();

        try {
            if(RS.next()){
                String SQL;
                SQL = "update t_direcao set cpf_cod = '" + jtfCpf_Cod.getText() + "', chassis_cod = '" + jtfChassis_Cod.getText() + "' where cpf_cod = '" + jtfCpf_Cod.getText() + "'";
                Conexao.setSQL(SQL);
                Conexao.Executar();
            } else {
                Fun = new Funcoes();

                if (Fun.VerificarMotorista(jtfCpf_Cod.getText()) == true) {
                    String SQL;
                    SQL = "insert into t_direcao (cpf_cod, chassis_cod) values ('" + jtfCpf_Cod.getText() + "', '" + jtfChassis_Cod.getText() + "')";
                    Conexao.setSQL(SQL);
                    Conexao.Executar();
                }else{
                    JOptionPane.showMessageDialog(null, "Motorista já com veículo!");
                }
                
            }

        } catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }

        Conexao.Desconectar();

        cboMotorista.removeAllItems ();
        cboVeiculo.removeAllItems();

        JogarMotorista();
        JogarVeiculo();

        cboMotorista.requestFocus();

    }//GEN-LAST:event_jmiSalvarActionPerformed

    private void cboMotoristaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMotoristaItemStateChanged
        
        if (cboMotorista.getItemCount()!=0){

            String codMotorista = ((Combo)cboMotorista.getSelectedItem()).getKey();
            String nomeMotorista = ((Combo)cboMotorista.getSelectedItem()).toString();

            jtfCpf_Cod.setText(codMotorista);
            jtfNomeMotorista.setText(nomeMotorista);

            String SQL;

            SQL = "select tdi.cpf_cod, tmo.nome, tdi.chassis_cod, tve.placa ";
            SQL = SQL + "from t_direcao tdi ";
            SQL = SQL + "inner join t_veiculo tve on tve.chassis = tdi.chassis_cod ";
            SQL = SQL + "inner join t_motorista tmo on tmo.cpf = tdi.cpf_cod ";
            SQL = SQL + "where tdi.cpf_cod = '" + codMotorista + "'";

            Conexao = new ConexaoAccess();
            Conexao.Conectar() ;
            Conexao.setSQL(SQL);

            ResultSet RS = Conexao.Consultar();

            try{
                if (RS.next()){
                    jtfCpf_Cod.setText(RS.getString("cpf_cod"));
                    jtfNomeMotorista.setText(RS.getString("nome"));
                    jtfChassis_Cod.setText(RS.getString("chassis_cod"));
                    jtfPlaca.setText(RS.getString("placa"));
                }
            }catch (Exception Erro){
                JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
            }

            jtfNomeMotorista.requestFocus();

        }

    }//GEN-LAST:event_cboMotoristaItemStateChanged

    private void cboVeiculoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboVeiculoItemStateChanged

        if (cboVeiculo.getItemCount()!=0){

            String codVeiculo = ((Combo)cboVeiculo.getSelectedItem()).getKey();
            String placaVeiculo = ((Combo)cboVeiculo.getSelectedItem()).toString();

            jtfChassis_Cod.setText(codVeiculo);
            jtfPlaca.setText(placaVeiculo);

        }

    }//GEN-LAST:event_cboVeiculoItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboMotorista;
    private javax.swing.JComboBox cboVeiculo;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel jlbMotorista;
    private javax.swing.JLabel jlbVeiculo;
    private javax.swing.JMenuBar jmbBarra;
    private javax.swing.JMenuItem jmiExcluir;
    private javax.swing.JMenuItem jmiPesquisar;
    private javax.swing.JMenuItem jmiSalvar;
    private javax.swing.JMenu jmnArquivo;
    private javax.swing.JMenuItem jmnNovo;
    private javax.swing.JMenu jmnPesquisa;
    private javax.swing.JTextField jtfChassis_Cod;
    private javax.swing.JTextField jtfCpf_Cod;
    private javax.swing.JTextField jtfNomeMotorista;
    private javax.swing.JTextField jtfPlaca;
    // End of variables declaration//GEN-END:variables

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pesquisa().setVisible(true);
            }
        });
    }

    public void centralizar(JDesktopPane dp) {
        Dimension ds = dp.getSize();
        Dimension dw = this.getSize();
        this.setLocation((ds.width - dw.width) / 2, (ds.height - dw.height) / 2);
    }

    private void JogarMotorista(){
        cboMotorista.removeAllItems();
        try {
            Conexao = new ConexaoAccess();
            Conexao.Conectar();
            Conexao.setSQL("select (cpf) as codigo, nome from t_motorista order by nome");
            ResultSet RS = Conexao.Consultar();
            DefaultComboBoxModel Modelo = new DefaultComboBoxModel();
            while(RS.next()){
                Combo CB = new Combo(RS.getString("codigo"),RS.getString("nome"));
                Modelo.addElement(CB);
            }
            cboMotorista.setModel(Modelo);
        } catch(Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro: " + Erro);
        }
    }

    private void JogarVeiculo(){
        cboVeiculo.removeAllItems();
        try {
            Conexao = new ConexaoAccess();
            Conexao.Conectar();
            Conexao.setSQL("select (chassis) as codigo, (placa) as nome from t_veiculo order by nome");
            ResultSet RS = Conexao.Consultar();
            DefaultComboBoxModel Modelo = new DefaultComboBoxModel();
            while(RS.next()){
                Combo CB = new Combo(RS.getString("codigo"),RS.getString("nome"));
                Modelo.addElement(CB);
            }
            cboVeiculo.setModel(Modelo);
        } catch(Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro: " + Erro);
        }
    }
    
}