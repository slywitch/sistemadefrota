/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadFornecedores.java
 *
 * Created on 24/11/2009, 07:27:00
 */

package controle;

import classes.Combo;
import classes.ConexaoAccess;
import classes.Funcoes;
import classes.ValidaDocumentos;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jeferson
 */
public class CadFornecedores extends javax.swing.JInternalFrame {

    private ConexaoAccess Conexao;
    private ConexaoAccess Conexao2;
    private ConexaoAccess Conexao3;
    private Funcoes Fun;
    private ValidaDocumentos VD;
    int CapturarLinha;

    /** Creates new form CadFornecedores */
    public CadFornecedores() {
        initComponents();
        JogarTipoFone();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtfCep = new javax.swing.JTextField();
        jlbCep = new javax.swing.JLabel();
        jtfCidade_Cod = new javax.swing.JTextField();
        jtfBairro = new javax.swing.JTextField();
        jlbCidade = new javax.swing.JLabel();
        jlbIM = new javax.swing.JLabel();
        jtfIm = new javax.swing.JTextField();
        jtfIe = new javax.swing.JTextField();
        jlbIE = new javax.swing.JLabel();
        jlbContato = new javax.swing.JLabel();
        jlbEmail = new javax.swing.JLabel();
        jtfCnpjCpf = new javax.swing.JTextField();
        jlbCnpj_Cpf = new javax.swing.JLabel();
        jlbBairro = new javax.swing.JLabel();
        jtfEmail = new javax.swing.JTextField();
        jtfFantasia = new javax.swing.JTextField();
        jlbFantasia = new javax.swing.JLabel();
        jlbNome = new javax.swing.JLabel();
        jtfEndereco = new javax.swing.JTextField();
        jlbEndereco = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        jtfNomeCidade = new javax.swing.JTextField();
        jtfContato = new javax.swing.JTextField();
        jbtNovo = new javax.swing.JButton();
        jbtExcluir = new javax.swing.JButton();
        jbtPesquisar = new javax.swing.JButton();
        jbtSalvar = new javax.swing.JButton();
        jlbFone = new javax.swing.JLabel();
        jtfFone = new javax.swing.JFormattedTextField();
        jbtAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jtfCodFone = new javax.swing.JFormattedTextField();
        jlbCodFone = new javax.swing.JLabel();
        jbtDel = new javax.swing.JButton();
        jcbTipoFone = new javax.swing.JComboBox();
        jlbTipo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jlbObs = new javax.swing.JLabel();
        jtfObs = new javax.swing.JFormattedTextField();
        jtfEmailNum = new javax.swing.JFormattedTextField();
        jlbEmailNum = new javax.swing.JLabel();
        jbtAddEmail = new javax.swing.JButton();
        jbtDelEmail = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setClosable(true);
        setTitle("Cadastro de Fornecedores");

        jlbCep.setText("CEP");

        jtfCidade_Cod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCidade_CodKeyPressed(evt);
            }
        });

        jlbCidade.setText("Cidade");

        jlbIM.setText("Inscrição Municipal");

        jlbIE.setText("Inscrição Estadual");

        jlbContato.setText("Contato");

        jlbEmail.setText("E-mail");

        jtfCnpjCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCnpjCpfActionPerformed(evt);
            }
        });
        jtfCnpjCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCnpjCpfKeyPressed(evt);
            }
        });

        jlbCnpj_Cpf.setText("CNPJ/CPF");

        jlbBairro.setText("Bairro");

        jlbFantasia.setText("Nome Fantasia");

        jlbNome.setText("Nome");

        jlbEndereco.setText("Endereço");

        jbtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Novo.png"))); // NOI18N
        jbtNovo.setText("Novo");
        jbtNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNovoActionPerformed(evt);
            }
        });

        jbtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Excluir.png"))); // NOI18N
        jbtExcluir.setText("Excluir");
        jbtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluirActionPerformed(evt);
            }
        });

        jbtPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pesquisa.png"))); // NOI18N
        jbtPesquisar.setText("Pesquisar");
        jbtPesquisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtPesquisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPesquisarActionPerformed(evt);
            }
        });

        jbtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Salvar.png"))); // NOI18N
        jbtSalvar.setText("Salvar");
        jbtSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSalvarActionPerformed(evt);
            }
        });

        jlbFone.setText("Telefone");

        jtfFone.setFormatterFactory(Fun.setFormatoTelefone());

        jbtAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Add.png"))); // NOI18N
        jbtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ação", "Telefone Nº", "Numero", "Cód. Tipo", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(250);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(400);

        jtfCodFone.setEnabled(false);

        jlbCodFone.setText("Cód. telefone");

        jbtDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Delete.png"))); // NOI18N
        jbtDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDelActionPerformed(evt);
            }
        });

        jcbTipoFone.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jlbTipo.setText("Tipo");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ação", "E-mail nº", "E-mail", "OBS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        jTable2.getColumnModel().getColumn(0).setResizable(false);
        jTable2.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTable2.getColumnModel().getColumn(1).setResizable(false);
        jTable2.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTable2.getColumnModel().getColumn(2).setResizable(false);
        jTable2.getColumnModel().getColumn(2).setPreferredWidth(300);
        jTable2.getColumnModel().getColumn(3).setResizable(false);
        jTable2.getColumnModel().getColumn(3).setPreferredWidth(300);

        jlbObs.setText("OBS");

        jtfEmailNum.setEnabled(false);

        jlbEmailNum.setText("E-mail nº");

        jbtAddEmail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Add.png"))); // NOI18N
        jbtAddEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddEmailActionPerformed(evt);
            }
        });

        jbtDelEmail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Delete.png"))); // NOI18N
        jbtDelEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDelEmailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfCnpjCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbCnpj_Cpf))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfNome)
                            .addComponent(jlbNome)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfCidade_Cod, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfNomeCidade))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbCep)
                            .addComponent(jtfCep, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbIM)
                            .addComponent(jtfIm, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfIe, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbIE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlbContato)
                                .addGap(0, 181, Short.MAX_VALUE))
                            .addComponent(jtfContato)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbFantasia))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlbEndereco)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jtfEndereco)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jbtNovo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtExcluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtPesquisar))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jbtAddEmail)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtDelEmail))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlbCodFone)
                            .addComponent(jtfCodFone, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtfFone, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbTipoFone, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlbFone)
                                .addGap(84, 84, 84)
                                .addComponent(jlbTipo)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtDel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlbBairro)
                        .addGap(201, 201, 201)
                        .addComponent(jlbCidade)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtfEmailNum, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlbEmailNum)
                                .addGap(18, 18, 18)
                                .addComponent(jlbEmail)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlbObs)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jtfObs))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbCnpj_Cpf)
                            .addComponent(jlbNome))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfCnpjCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbFantasia)
                            .addComponent(jlbEndereco))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbBairro)
                            .addComponent(jlbCidade))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCidade_Cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfNomeCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlbCep)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlbIM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfIm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbIE)
                            .addComponent(jlbContato))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfIe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbFone)
                            .addComponent(jlbTipo)
                            .addComponent(jlbCodFone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfFone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbTipoFone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCodFone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jbtDel)
                    .addComponent(jbtAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbEmail)
                    .addComponent(jlbObs)
                    .addComponent(jlbEmailNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfEmailNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbtDelEmail)
                    .addComponent(jbtAddEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jbtSalvar)
                        .addComponent(jbtNovo))
                    .addComponent(jbtExcluir)
                    .addComponent(jbtPesquisar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NovoRegistro(){

        String SQL;

        SQL = "insert into t_fornecedor (cnpjcpf, nomefornecedor, nomefantasia, enderecofornecedor, bairrofornecedor, ";
        SQL = SQL + "cidadecod, cepfornecedor, fone1fornecedor, fone2fornecedor, faxfornecedor, iefornecedor, ";
        SQL = SQL + "imfornecedor, contatofornecedor, emailfornecedor, exclusao) ";
        SQL = SQL + "values ('" + jtfCnpjCpf.getText() + "', '" + jtfNome.getText();
        SQL = SQL + "', '" + jtfFantasia.getText() + "', '" + jtfEndereco.getText() + "', '" + jtfBairro.getText();
        SQL = SQL + "', " + jtfCidade_Cod.getText() + ", '" + jtfCep.getText() + "', '" + jtfIe.getText() + "', '";
        SQL = SQL + jtfIm.getText() + "', '" + jtfContato.getText() + "', '" + jtfEmail.getText() + "', 0)";
        
        Conexao.setSQL(SQL);
        Conexao.Executar();
        
        int linha_total = jTable1.getRowCount();
        int contador = 1;

        while(contador <= linha_total){

            int linha = contador - 1;

            String SQL2 = null;

            String Status = "", TipoFone = "", NumTelefone = "", CodTipo = "";

            Status = "INC";
            TipoFone = jTable1.getValueAt(linha, 1).toString();
            NumTelefone = jTable1.getValueAt(linha, 2).toString();
            CodTipo = jTable1.getValueAt(linha, 3).toString();

            Fun = new Funcoes();
            String Codigo = (Fun.Proximo("codigo", "t_fornecedor_fone", "where cnpjcpf = " + jtfCnpjCpf.getText()));

            if (Status.equals("INC")){

                    SQL2 = "insert into t_fornecedor_fone (codigo, cpf_motorista, num_telefone, ";
                    SQL2 = SQL2 + "tipo_fone, exclusao) values (";
                    SQL2 = SQL2 + "" + Codigo + ", ";
                    SQL2 = SQL2 + "" + jtfCnpjCpf.getText() + ", ";
                    SQL2 = SQL2 + "" + NumTelefone + ", ";
                    SQL2 = SQL2 + "" + TipoFone + ", ";
                    SQL2 = SQL2 + "0)";

                    Conexao2.setSQL(SQL2);                    
                    Conexao2.Executar();

                    contador++;
            }                    
        }
        
        
        int linha_total2 = jTable2.getRowCount();
        int contador2 = 1;

        while(contador2 <= linha_total2){

            int linha2 = contador2 - 1;

            String SQL3 = null;

            String Status = "", email = "", obs = "";

            Status = "INC";
            email = jTable2.getValueAt(linha2, 2).toString();
            obs = jTable2.getValueAt(linha2, 3).toString();

            Fun = new Funcoes();
            String Codigo = (Fun.Proximo("codigo", "t_fornecedor_email", "where cnpjcpf = " + jtfCnpjCpf.getText()));

            if (Status.equals("INC")){

                SQL3 = "insert into t_fornecedor_email (codigo, cnpjcpf, email, obs, exclusao) values (";
                SQL3 = SQL3 + "" + Codigo + ", ";
                SQL3 = SQL3 + "" + jtfCnpjCpf.getText() + ", ";
                SQL3 = SQL3 + "'" + email + "', ";
                SQL3 = SQL3 + "'" + obs + "', ";
                SQL3 = SQL3 + "0)";

                Conexao2.setSQL(SQL3);                    
                Conexao2.Executar();

                contador2++;

            }                    
        }
            
    }

    private void jtfCnpjCpfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCnpjCpfKeyPressed

        if(evt.getKeyCode() == KeyEvent.VK_ENTER){

            CarregarDados(jtfCnpjCpf.getText());

        }

    }//GEN-LAST:event_jtfCnpjCpfKeyPressed

    private void jtfCidade_CodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCidade_CodKeyPressed

        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            Fun = new Funcoes();
            jtfNomeCidade.setText(Fun.NomeCidade(Integer.parseInt(jtfCidade_Cod.getText())));

            jtfCep.requestFocus();
        }

        if(evt.getKeyCode() == KeyEvent.VK_F12){
            SubPesquisaCidade A = new SubPesquisaCidade();
            A.setVisible(true);
            JDesktopPane JDP = this.getDesktopPane();
            JDP.add(A);
            A.centralizar(JDP);
            try{
                A.setSelected(true);
                A.SetSubPesquisaFornecedores(this);
                A.Validador("Fornecedor");
            }catch (Exception E){
                JOptionPane.showMessageDialog(null, "Erro: " + E);
            }
            A.setVisible(true);
        }
        
    }//GEN-LAST:event_jtfCidade_CodKeyPressed

    private void jbtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNovoActionPerformed

        Limpar();

        jtfCnpjCpf.requestFocus();

    }//GEN-LAST:event_jbtNovoActionPerformed

    private void jbtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluirActionPerformed

        Object[] botoes = { "Sim", "Não" };
        
        int resposta;

        resposta = JOptionPane.showOptionDialog(null, "Você deseja realmente excluir este registro?", "Confirma exclusão", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE, null, botoes, botoes[0]);

        if(resposta == JOptionPane.YES_OPTION){

            String SQL = "update t_fornecedor set exclusao = 1 where cnpjcpf = '" + jtfCnpjCpf.getText() + "'";         

            Conexao = new ConexaoAccess();
            Conexao.Conectar();
            Conexao.setSQL(SQL);
            Conexao.Executar();
            Conexao.Desconectar();

            Limpar();

        }

        jtfCnpjCpf.requestFocus();

    }//GEN-LAST:event_jbtExcluirActionPerformed

    private void jbtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPesquisarActionPerformed

        PesquisaFornecedores A = new PesquisaFornecedores();
        A.setVisible(true);
        JDesktopPane JDP = this.getDesktopPane();
        JDP.add(A);
        A.centralizar(JDP);
        try{
            A.setSelected(true);
            A.SetFornecedor(this);
        }catch (Exception E){
            JOptionPane.showMessageDialog(null, "Erro: " + E);
        }
        A.setVisible(true);

    }//GEN-LAST:event_jbtPesquisarActionPerformed

    private void jbtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSalvarActionPerformed

        Conexao = new ConexaoAccess();
        Conexao.Conectar();
        Conexao.setSQL("select * from t_fornecedor where cnpjcpf = '" + jtfCnpjCpf.getText() + "' ");
        ResultSet RS = Conexao.Consultar();

        try {
            if(RS.next()){
                String SQL;

                SQL = "update t_fornecedor set nomefornecedor = '" + jtfNome.getText() + "', nomefantasia = '";
                SQL = SQL + jtfFantasia.getText() + "', enderecofornecedor = '" + jtfEndereco.getText();
                SQL = SQL + "', bairrofornecedor = '" + jtfBairro.getText() + "', " + "cidadecod = " + jtfCidade_Cod.getText() ;
                SQL = SQL + ", cepfornecedor = '" + jtfCep.getText() + "', ";
//                SQL = SQL + "', fone2fornecedor = '" + jtfFone2.getText() + "', faxfornecedor = '" + jtfFax.getText();
                SQL = SQL + "iefornecedor = '" + jtfIe.getText() + "', imfornecedor = '";
                SQL = SQL + jtfIm.getText() + "', contatofornecedor = '" + jtfContato.getText() + "', emailfornecedor = '" + jtfEmail.getText() + "' ";
                SQL = SQL + "where cnpjcpf = '" + jtfCnpjCpf.getText() + "'";

                Conexao.setSQL(SQL);
                Conexao.Executar();
                
                int linha_total = jTable1.getRowCount();
                int contador = 1;

                while(contador <= linha_total){

                    int linha = contador - 1;

                    String SQL2 = null;

                    String Status = "", CodTabela = "", TipoFone = "", NumTelefone = "", CodTipo = "";

                    Status = jTable1.getValueAt(linha, 0).toString();
                    CodTabela = jTable1.getValueAt(linha, 1).toString();
                    NumTelefone = jTable1.getValueAt(linha, 2).toString();
                    CodTipo = jTable1.getValueAt(linha, 3).toString();

                    Fun = new Funcoes();
                    String Codigo = (Fun.Proximo("codigo", "t_fornecedor_fone", "where cnpjcpf = '" + jtfCnpjCpf.getText() + "' "));

                    if (Status.equals("INC")){

                        SQL2 = "insert into t_fornecedor_fone (codigo, cnpjcpf, num_telefone, ";
                        SQL2 = SQL2 + "tipo_fone, exclusao) values (";
                        SQL2 = SQL2 + "" + Codigo + ", ";
                        SQL2 = SQL2 + "'" + jtfCnpjCpf.getText() + "', ";
                        SQL2 = SQL2 + "'" + NumTelefone + "', ";
                        SQL2 = SQL2 + "" + CodTipo + ", ";
                        SQL2 = SQL2 + "0)";

                        System.out.println(SQL2);
                            
                    } else if (Status.equals("UPD")){

                        SQL2 = "update t_fornecedor_fone set ";
                        SQL2 = SQL2 + "num_telefone = '" + NumTelefone + "', ";
                        SQL2 = SQL2 + "tipo_fone = " + CodTipo + " ";                            
                        SQL2 = SQL2 + "where codigo = " + CodTabela + " ";
                        SQL2 = SQL2 + "and cnpjcpf = '" + jtfCnpjCpf.getText() + "' ";
                        SQL2 = SQL2 + "and exclusao = 0 ";


                    } else if (Status.equals("DEL")){

                        SQL2 = "update t_fornecedor_fone set exclusao = 1 where codigo = " + CodTabela + " ";
                        SQL2 = SQL2 + "and cnpjcpf = '" + jtfCnpjCpf.getText() + "' ";

                    }                    
                    
                    Conexao2 = new ConexaoAccess();
                    Conexao2.Conectar();
                    Conexao2.setSQL(SQL2);                    
                    Conexao2.Executar();

                    contador++;
                    
                } 
                
                int linha_total2 = jTable2.getRowCount();
                int contador2 = 1;

                while(contador2 <= linha_total2){

                    int linha2 = contador2 - 1;

                    String SQL3 = null;
                    
                    String Status = "", emailnum = "", email = "", obs = "";

                    Status = jTable2.getValueAt(linha2, 0).toString();
                    emailnum = jTable2.getValueAt(linha2, 1).toString();
                    email = jTable2.getValueAt(linha2, 2).toString();
                    obs = jTable2.getValueAt(linha2, 3).toString();

                    Fun = new Funcoes();
                    String Codigo = (Fun.Proximo("codigo", "t_fornecedor_email", "where cnpjcpf = '" + jtfCnpjCpf.getText() + "' "));                   
                    
                    if (Status.equals("INC")){

                        SQL3 = "insert into t_fornecedor_email (codigo, cnpjcpf, email, obs, exclusao) ";
                        SQL3 = SQL3 + "values (";
                        SQL3 = SQL3 + "" + Codigo + ", ";
                        SQL3 = SQL3 + "'" + jtfCnpjCpf.getText() + "', ";
                        SQL3 = SQL3 + "'" + email + "', ";
                        SQL3 = SQL3 + "'" + obs + "', ";
                        SQL3 = SQL3 + "0)";
                            
                    } else if (Status.equals("UPD")){

                        SQL3 = "update t_fornecedor_email set ";
                        SQL3 = SQL3 + "email = '" + email + "', ";
                        SQL3 = SQL3 + "obs = '" + obs + "' ";                            
                        SQL3 = SQL3 + "where codigo = " + emailnum + " ";
                        SQL3 = SQL3 + "and cnpjcpf = '" + jtfCnpjCpf.getText() + "' ";
                        SQL3 = SQL3 + "and exclusao = 0 ";


                    } else if (Status.equals("DEL")){

                        SQL3 = "update t_fornecedor_email set exclusao = 1 where codigo = " + emailnum + " ";
                        SQL3 = SQL3 + "and cnpjcpf = '" + jtfCnpjCpf.getText() + "' ";

                    }                    
                    
                    Conexao3 = new ConexaoAccess();
                    Conexao3.Conectar();
                    Conexao3.setSQL(SQL3);                    
                    Conexao3.Executar();

                    contador2++;
                    
                }
                
                
            } else {
                
                Object[] botoes = { "Sim", "Não" }; 

                if (jtfCnpjCpf.getText().length() == 11) {

                    VD = new ValidaDocumentos();

                    if (!(VD.validaCPF(jtfCnpjCpf.getText()))) {

                        int resposta;

                        resposta = JOptionPane.showOptionDialog(null, "CNPJ inválido! deseja continuar", "Opaaaaa!!!", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE, null, botoes, botoes[0]);

                        if(resposta == JOptionPane.YES_OPTION){

                            NovoRegistro();

                        }

                    } else {

                        NovoRegistro();

                    }
                
                } else {

                    VD = new ValidaDocumentos();

                    if (!(VD.validaCNPJ(jtfCnpjCpf.getText()))) {

                        int resposta;

                        resposta = JOptionPane.showOptionDialog(null, "CNPJ inválido! deseja continuar", "Opaaaaa!!!", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE, null, botoes, botoes[0]);

                        if(resposta == JOptionPane.YES_OPTION){

                            NovoRegistro();

                        }
                        
                    } else {

                        NovoRegistro();
                        
                    }
                }
            }
        } catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }

        Conexao.Desconectar();

        Limpar();

        jtfCnpjCpf.requestFocus();

    }//GEN-LAST:event_jbtSalvarActionPerformed

    private void jtfCnpjCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCnpjCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCnpjCpfActionPerformed

    private void jbtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddActionPerformed
       
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        
        String CodTipoFone = ((Combo)jcbTipoFone.getSelectedItem()).getKey();
        String TipoFone = ((Combo)jcbTipoFone.getSelectedItem()).toString();

        if (jtfCodFone.getText().equals("")){

            Object[] Linha = {"INC", "", jtfFone.getText(), CodTipoFone, TipoFone};
            modelo.addRow(Linha);

        } else {

            modelo.setValueAt("UPD", CapturarLinha, 0);
            modelo.setValueAt(jtfCodFone.getText(), CapturarLinha, 1);
            modelo.setValueAt(jtfFone.getText(), CapturarLinha, 2);
            modelo.setValueAt(CodTipoFone, CapturarLinha, 3);
            modelo.setValueAt(TipoFone, CapturarLinha, 4);

        }

        Add();

    }//GEN-LAST:event_jbtAddActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        CapturarLinha = jTable1.getSelectedRow();

        jcbTipoFone.removeAllItems();
        JogarTipoFone();
        
        jTable1.addMouseListener(new MouseAdapter() {
        public void mouseClicked(MouseEvent e) {
            if (e.getClickCount() == 2) {
                String TipoTelefone;

                jtfCodFone.setText(jTable1.getValueAt(CapturarLinha, 1).toString());
                jtfFone.setText(jTable1.getValueAt(CapturarLinha, 2).toString());

                TipoTelefone = jTable1.getValueAt(CapturarLinha, 4).toString();
                ComboBoxModel CBM;
                CBM = jcbTipoFone.getModel();
                CBM.setSelectedItem(TipoTelefone);
            }
        }
        });

    }//GEN-LAST:event_jTable1MouseClicked

    private void jbtDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDelActionPerformed

        String Operacao = "DEL";

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        int Linha = CapturarLinha;

        String OP = String.valueOf(modelo.getValueAt(CapturarLinha, 0));

        if (OP.equals("DEL")){
            if (jtfFone.getText().trim().equals("")) {
                Operacao = "INS";
            } else {
                Operacao = "UPD";
            }
            modelo.setValueAt(Operacao, Linha, 0);
        } else {
            Operacao = "DEL";
            modelo.setValueAt(Operacao, Linha, 0);
        }

    }//GEN-LAST:event_jbtDelActionPerformed

    private void jbtAddEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddEmailActionPerformed

        DefaultTableModel modelo2 = (DefaultTableModel) jTable2.getModel();

        if (jtfEmailNum.getText().equals("")){

            Object[] LinhaEmail = {"INC", "", jtfEmail.getText(), jtfObs.getText()};
            modelo2.addRow(LinhaEmail);

        } else {

            modelo2.setValueAt("UPD", CapturarLinha, 0);
            modelo2.setValueAt(jtfEmailNum.getText(), CapturarLinha, 1);
            modelo2.setValueAt(jtfEmail.getText(), CapturarLinha, 2);
            modelo2.setValueAt(jtfObs.getText(), CapturarLinha, 3);

        }

        AddEmail();
        
    }//GEN-LAST:event_jbtAddEmailActionPerformed

    private void jbtDelEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDelEmailActionPerformed
        
        String Operacao = "DEL";

        DefaultTableModel modelo = (DefaultTableModel) jTable2.getModel();
        int Linha = CapturarLinha;

        String OP = String.valueOf(modelo.getValueAt(CapturarLinha, 0));

        if (OP.equals("DEL")){
            if (jtfEmail.getText().trim().equals("")) {
                Operacao = "INS";
            } else {
                Operacao = "UPD";
            }
            modelo.setValueAt(Operacao, Linha, 0);
        } else {
            Operacao = "DEL";
            modelo.setValueAt(Operacao, Linha, 0);
        }
        
    }//GEN-LAST:event_jbtDelEmailActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        
        CapturarLinha = jTable2.getSelectedRow();

        jTable2.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {

                    jtfEmailNum.setText(jTable2.getValueAt(CapturarLinha, 1).toString());
                    jtfEmail.setText(jTable2.getValueAt(CapturarLinha, 2).toString());
                    jtfObs.setText(jTable2.getValueAt(CapturarLinha, 3).toString());
                    
                }
            }
        });
        
    }//GEN-LAST:event_jTable2MouseClicked

    public void CarregarDados(String Codigo){

        String SQL;

        SQL = "select * from t_fornecedor ";
        SQL = SQL + "where cnpjcpf = '" + Codigo + "' ";
        SQL = SQL + "and exclusao = 0 ";

        Conexao = new ConexaoAccess();
        Conexao.Conectar() ;
        Conexao.setSQL(SQL);
        
        String SQL2;
        SQL2 = "select codigo, num_telefone, tipo_fone from t_fornecedor_fone ";
        SQL2 = SQL2 + "where cnpjcpf = '" + Codigo + "' and exclusao = 0";
        
        Conexao2 = new ConexaoAccess();
        Conexao2.Conectar() ;
        Conexao2.setSQL(SQL2);
        
        String SQL3;
        SQL3 = "select codigo, email, obs from t_fornecedor_email ";
        SQL3 = SQL3 + "where cnpjcpf = '" + Codigo + "' and exclusao = 0 ";
        
        Conexao3 = new ConexaoAccess();
        Conexao3.Conectar() ;
        Conexao3.setSQL(SQL3);
        
        ResultSet RS = Conexao.Consultar();
        ResultSet RS2 = Conexao2.Consultar();
        ResultSet RS3 = Conexao3.Consultar();

        try{
            if (RS.next()){
                jtfCnpjCpf.setText(RS.getString("cnpjcpf"));
                jtfNome.setText(RS.getString("nomefornecedor"));
                jtfFantasia.setText(RS.getString("nomefantasia"));
                jtfEndereco.setText(RS.getString("enderecofornecedor"));
                jtfBairro.setText(RS.getString("bairrofornecedor"));
                jtfCidade_Cod.setText(RS.getString("cidadecod"));

                Fun = new Funcoes();
                jtfNomeCidade.setText(Fun.NomeCidade(Integer.parseInt(RS.getString("cidadecod"))));

                jtfCep.setText(RS.getString("cepfornecedor"));
                jtfIe.setText(RS.getString("iefornecedor"));
                jtfIm.setText(RS.getString("imfornecedor"));
//                jtfContato.setText(RS.getString("contatofornecedor"));
                
                while(RS2.next()){

                    String Status = "", Cod = "", NumTelefone = "", CodTipo = "", Fone = "";

                    Cod = RS2.getString("codigo");
                    NumTelefone = RS2.getString("num_telefone");
                    CodTipo = RS2.getString("tipo_fone");
                    Fone = PuxaTipoFone(Integer.parseInt(CodTipo));

                    DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                    Object[] Linha = {"UPD", Cod, NumTelefone, CodTipo, Fone};
                    modelo.addRow(Linha);                    

                } 
                
                while(RS3.next()){

                    String Status = "", Cod = "", email = "", obs = "";

                    Cod = RS3.getString("codigo");
                    email = RS3.getString("email");
                    obs = RS3.getString("obs");

                    DefaultTableModel modelo = (DefaultTableModel) jTable2.getModel();
                    Object[] Linha = {"UPD", Cod, email, obs};
                    modelo.addRow(Linha);                    

                }         
                
            }
        }catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }

        Conexao.Desconectar();
        Conexao2.Desconectar();
        Conexao3.Desconectar();

        jtfNome.requestFocus();

    }

    public String PuxaTipoFone(int Codigo){
        
        String SQL;
        String Tipo = null;
        
        SQL = "select nome ";
        SQL = SQL + "from t_tipo_fone ";
        SQL = SQL + "where codigo = " + Codigo + " ";
        SQL = SQL + "and exclusao = 0 ";

        Conexao = new ConexaoAccess();
        Conexao.Conectar() ;
        Conexao.setSQL(SQL);

        ResultSet RS = Conexao.Consultar();

        try{
            if (RS.next()){

                Tipo = RS.getString("nome");
                
            }
        }catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }
        
        return Tipo;
        
    }
    
    public void PuxaCidade(int Codigo){

        String SQL;

        SQL = "select cid.codcidade, cid.cidade, cid.coduf, cuf.uf ";
        SQL = SQL + "from cidade cid ";
        SQL = SQL + "inner join cidade_uf cuf on cuf.coduf = cid.coduf ";
        SQL = SQL + "where cid.codcidade = " + Codigo + " ";
        SQL = SQL + "and cid.exclusao = 0 ";

        Conexao = new ConexaoAccess();
        Conexao.Conectar();
        Conexao.setSQL(SQL);

        ResultSet RS = Conexao.Consultar();

        try{
            if (RS.next()){

                jtfCidade_Cod.setText(RS.getString("codcidade"));
                jtfNomeCidade.setText(RS.getString("cidade"));

            }
        }catch (Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro na validação: " + Erro);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton jbtAdd;
    private javax.swing.JButton jbtAddEmail;
    private javax.swing.JButton jbtDel;
    private javax.swing.JButton jbtDelEmail;
    private javax.swing.JButton jbtExcluir;
    private javax.swing.JButton jbtNovo;
    private javax.swing.JButton jbtPesquisar;
    private javax.swing.JButton jbtSalvar;
    private javax.swing.JComboBox jcbTipoFone;
    private javax.swing.JLabel jlbBairro;
    private javax.swing.JLabel jlbCep;
    private javax.swing.JLabel jlbCidade;
    private javax.swing.JLabel jlbCnpj_Cpf;
    private javax.swing.JLabel jlbCodFone;
    private javax.swing.JLabel jlbContato;
    private javax.swing.JLabel jlbEmail;
    private javax.swing.JLabel jlbEmailNum;
    private javax.swing.JLabel jlbEndereco;
    private javax.swing.JLabel jlbFantasia;
    private javax.swing.JLabel jlbFone;
    private javax.swing.JLabel jlbIE;
    private javax.swing.JLabel jlbIM;
    private javax.swing.JLabel jlbNome;
    private javax.swing.JLabel jlbObs;
    private javax.swing.JLabel jlbTipo;
    private javax.swing.JTextField jtfBairro;
    private javax.swing.JTextField jtfCep;
    private javax.swing.JTextField jtfCidade_Cod;
    private javax.swing.JTextField jtfCnpjCpf;
    private javax.swing.JFormattedTextField jtfCodFone;
    private javax.swing.JTextField jtfContato;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JFormattedTextField jtfEmailNum;
    private javax.swing.JTextField jtfEndereco;
    private javax.swing.JTextField jtfFantasia;
    private javax.swing.JFormattedTextField jtfFone;
    private javax.swing.JTextField jtfIe;
    private javax.swing.JTextField jtfIm;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfNomeCidade;
    private javax.swing.JFormattedTextField jtfObs;
    // End of variables declaration//GEN-END:variables

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadFornecedores().setVisible(true);
            }
        });
    }

    public void centralizar(JDesktopPane dp) {
        Dimension ds = dp.getSize();
        Dimension dw = this.getSize();
        this.setLocation((ds.width - dw.width) / 2, (ds.height - dw.height) / 2);
    }

    private void Limpar(){

        jtfCnpjCpf.setText("");
        jtfNome.setText("");
        jtfFantasia.setText("");
        jtfEndereco.setText("");
        jtfBairro.setText("");
        jtfCidade_Cod.setText("");
        jtfNomeCidade.setText("");
        jtfCep.setText("");
        jtfFone.setText("");
        jtfIm.setText("");
        jtfIe.setText("");
        jtfContato.setText("");
        
        jcbTipoFone.removeAllItems();
        JogarTipoFone();
        
        ((DefaultTableModel) jTable1.getModel()).setNumRows(0);
        jTable1.updateUI();
        
        jtfEmailNum.setText("");
        jtfEmail.setText("");
        jtfObs.setText("");
        
        ((DefaultTableModel) jTable2.getModel()).setNumRows(0);
        jTable2.updateUI();
        
    }
   
    private void Add(){

        Fun = new Funcoes();
        
        jtfFone.setValue(null);
        jtfFone.setText("");
        jtfFone.setFormatterFactory(Fun.setFormatoTelefone());

        jcbTipoFone.removeAllItems();
        JogarTipoFone();

        jtfFone.requestFocus();

    }
    
    private void AddEmail(){

        jtfEmail.setText("");
        jtfObs.setText("");

        jtfEmail.requestFocus();

    }
    
    public void JogarTipoFone(){
        
        jcbTipoFone.removeAllItems();
        try {
            Conexao = new ConexaoAccess();
            Conexao.Conectar();
            Conexao.setSQL("select codigo, nome from t_tipo_fone where exclusao = 0 order by nome ");
            ResultSet RS = Conexao.Consultar();
            DefaultComboBoxModel Modelo = new DefaultComboBoxModel();
            while(RS.next()){
                Combo cboF = new Combo(RS.getString("codigo"),RS.getString("nome"));
                Modelo.addElement(cboF);
            }
            jcbTipoFone.setModel(Modelo);
        } catch(Exception Erro){
            JOptionPane.showMessageDialog(null, "Erro: " + Erro);
        }
        
    }
    
}
